@model NiceBytes.Veterinary.Models.PetsModel
@using Newtonsoft.Json;

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <ul class="nav nav-tabs">
        <li role="presentation" class="active">
            <a href="#">Perfil</a>
        </li>

        <li role="presentation">
            <a href="#">Mascotas</a>
        </li>
    </ul>

    <div class="form-horizontal" id="petAdd">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PetNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PetNumber, new { @class = "form-control", data_bind = "value: PetNumberM" })
                @Html.ValidationMessageFor(model => model.PetNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", data_bind = "value: FirstNameM" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Gender, new { @class = "form-control", data_bind = "value: GenderM" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DateBirth, new { @class = "form-control", data_bind = "value: DateBirthM" })
                @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Breed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Breed, new { @class = "form-control", data_bind = "value: BreedM" })
                @Html.ValidationMessageFor(model => model.Breed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Colour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Colour, new { @class = "form-control", data_bind = "value: ColourM" })
                @Html.ValidationMessageFor(model => model.Colour, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button data-bind="click: $root.addSave" class="btn btn-default">
                    <span class="glyphicon glyphicon-floppy-saved"></span>
                </button>
            </div>
        </div>
    </div>
}

<script>
    function Details() {
        var self = this;
        self.Pet = ko.observable(@Html.Raw(JsonConvert.SerializeObject(Model, new JsonSerializerSettings{ReferenceLoopHandling = ReferenceLoopHandling.Ignore})));


        self.PetNumberM = ko.observable("");
        self.FirstNameM = ko.observable("");
        self.GenderM = ko.observable("");
        self.DateBirthM = ko.observable("");
        self.BreedM = ko.observable("");
        self.ColourM = ko.observable("");

        self.addSave = function (item) {
            //var Pet = item;
            var oldPet = jQuery.extend(true, {}, item.Pet());
            debugger;
            console.log(item.Pet());
            item.Pet().PetNumber = self.PetNumberM();
            item.Pet().FirstName = self.FirstNameM();
            item.Pet().Gender = self.GenderM();
            item.Pet().DateBirth = self.DateBirthM();
            item.Pet().DateEntry = self.Pet().DateEntry;
            item.Pet().Breed = self.BreedM();
            item.Pet().Colour = self.ColourM();
            item.Pet().ClientsModelId = self.Pet().ClientsModelId;

            var PetToUpdate = {};
            PetToUpdate.PetNumber = item.Pet().PetNumber;
            PetToUpdate.FirstName = item.Pet().FirstName;
            PetToUpdate.Gender = item.Pet().Gender;
            PetToUpdate.DateBirth = item.Pet().DateBirth;
            PetToUpdate.DateEntry = item.Pet().DateEntry;
            PetToUpdate.Breed = item.Pet().Breed;
            PetToUpdate.Colour = item.Pet().Colour;
            PetToUpdate.ClientsModelId = item.Pet().ClientsModelId;

            var Data = JSON.stringify({ newPet: PetToUpdate });
            console.log(Data);
            $.ajax({
                url: '@Url.Action("Create", "Pets")',
                cache: false,
                type: 'POST',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: Data,
                success: function (data) {
                    debugger;
                    $.ajax({
                        prop: 'href',
                        url: '@Url.Action("Index", "Pets")',
                        data: { id: PetToUpdate.ClientsModelId },
                        type: 'GET',
                        dataType: 'HTML',  // add this line
                        success: function (result) {
                            $('#result').empty();
                            $('#result').html(result);
                        }
                    });
                },
            });
        }
    }

    ko.applyBindings(new Details(), document.getElementById("petAdd"));
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
}
